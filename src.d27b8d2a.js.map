{"version":3,"sources":["js/fetchImages.js","index.js"],"names":["BASE_URL","KEY","fetchImages","name","fetch","then","response","ok","Error","json","formRef","document","querySelector","onSearch","event","preventDefault","console","log","currentTarget","elements","searchQuery","value","addEventListener"],"mappings":";;;AAqFA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EArFA,MAAMA,EAAW,2BACXC,EAAM,qCAML,SAASC,EAAYC,GACjBC,OAAAA,SAASJ,SAAgBC,OAASE,iEAAoEE,KAAKC,IAC1G,IAACA,EAASC,GACJ,MAAA,IAAIC,MAAM,uBAEbF,OAAAA,EAASG;;ACwIxB,aApJA,QAAA,oBACA,IAAA,EAAA,QAAA,oBAEA,MAAMC,EAAUC,SAASC,cAAc,gBAIvC,SAASC,EAASC,GACdA,EAAMC,iBAENC,QAAQC,KAAI,EAAYH,EAAAA,aAAAA,EAAMI,cAAcC,SAASC,YAAYC,QALrEX,EAAQY,iBAAiB,SAAUT","file":"src.d27b8d2a.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = \"https://pixabay.com/api/\";\nconst KEY = \"27623768-405768f09194e046df4a054c4\";\n\n//  key=\"KEY\" q=примерно`${input.value}` image_type=\"photo\" orientation=\"horizontal\" safesearch=\"true\"\n\n// https://pixabay.com/api/?key=27623768-405768f09194e046df4a054c4&q=yellow+flowers&image_type=photo&pretty=true\n\nexport function fetchImages(name){\n    return fetch(`${BASE_URL}?key=${KEY}&q=${name}&image_type=photo&orientation=\"horizontal\"&safesearch=\"true\"`).then(response => {\n        if (!response.ok){\n            throw new Error('Error fetching data');\n        }\n        return response.json();\n    })   \n}\n\n\n\n          // FROM GINATION-TEST api.js\n\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const KEY = '23788919-1e868a4f1ae72234cc449d190';\n\n\n// export default {\n\n//  itemsPerPage: 0,\n//   searchQuery: '',\n    \n//   // create object hits, totalhits, total\n// fetchPopularImages(page) {\n//   console.log(page);\n//   return fetch(\n//     `${BASE_URL}?key=${KEY}&q=${this.searchQuery}&image_type=photo&page=${page}&per_page=${this.itemsPerPage}`,\n//   )\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     })\n//     .then(data => ({ images: data.hits, total: data.totalHits }));\n// },\n\n\n// fetchImagesByName(page) {\n\n//   return fetch(\n//     `${BASE_URL}?key=${KEY}&q=${this.searchQuery}&image_type=photo&page=${page}&per_page=${this.itemsPerPage}`,\n//   )\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     })\n//     .then(data => ({ images: data.hits, total: data.totalHits }));\n//   }\n// }\n\n\n\n\n//  from render-images.js\n\n// // Рисует текстовую разметку для картинок\n// export default function renderGallery(images) {\n//   return images\n//     .map(image => {\n//       const { largeImageURL, webformatURL, tags, likes, views, comments, downloads } = image;\n//       return `<a class=\"gallery__link\" href=\"${largeImageURL}\">\n//           <div class=\"gallery-item\">\n//             <img class=\"gallery-item__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"250\"/>\n//             <div class=\"info\">\n//               <p class=\"info-item\"><b>Likes</b>${likes}</p>\n//               <p class=\"info-item\"><b>Views</b>${views}</p>\n//               <p class=\"info-item\"><b>Comments</b>${comments}</p>\n//               <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n//             </div>\n//           </div>\n//         </a>`;\n//     })\n//     .join('');\n  \n// }","import './sass/main.scss';\nimport { fetchImages } from './js/fetchImages';\n\nconst formRef = document.querySelector(\"#search-form\");\n\nformRef.addEventListener(\"submit\", onSearch);\n\nfunction onSearch(event) {\n    event.preventDefault();\n    // console.log(event.currentTarget.elements.searchQuery.value);\n    console.log(fetchImages(event.currentTarget.elements.searchQuery.value));\n}\n\n\n\n\n\n\n\n\n\n           // FROM GINATION-TEST index.js\n\n\n// import './sass/main.scss';\n// import Pagination from 'tui-pagination';\n// import 'tui-pagination/dist/tui-pagination.css';\n// import apiService from \"./js/api\";\n// import renderGallery from './js/render_images'\n\n// const galleryEl = document.querySelector('.gallery');\n// const formEl = document.querySelector('.search-form');\n\n// let searchQuery = '';\n\n// const options = {\n//   totalItems: 0,\n//   itemsPerPage: 3,\n//   visiblePages: 10,\n//   page: 1,\n// };\n\n\n// apiService.itemsPerPage = options.itemsPerPage;\n\n\n\n// const pagination = new Pagination('pagination', options);\n// // console.dir(pagination);\n\n// const page = pagination.getCurrentPage();\n\n\n// apiService.fetchPopularImages(page).then(({ images, total }) => {\n//    const markup = renderGallery(images);\n//     galleryEl.insertAdjacentHTML('beforeend', markup);\n//   pagination.reset(total);\n// });\n\n// function popular(event) {\n//   const currentPage = event.page;\n//   apiService.fetchPopularImages(currentPage).then(({ images, total }) => {\n//     const markup = renderGallery(images);\n//     galleryEl.insertAdjacentHTML('beforeend', markup);\n//   });\n// }\n\n// pagination.on('afterMove', popular);\n\n// formEl.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n\n//   galleryEl.innerHTML = '';\n\n//   pagination.off('afterMove', popular);\n//   pagination.movePageTo(1);\n//   pagination.on('afterMove', bySearch);\n\n//   apiService.searchQuery = event.currentTarget.elements.searchQuery.value;\n  \n//   apiService.fetchImagesByName(page).then(({ images, total }) => {\n//    const markup = renderGallery(images);\n//     galleryEl.insertAdjacentHTML('beforeend', markup);\n//     pagination.reset(total);\n//   });\n// }\n\n// function bySearch(event) {\n//   const currentPage = event.page;\n//   apiService.fetchImagesByName(currentPage).then(({ images }) => {\n//      const markup = renderGallery(images);\n//     galleryEl.insertAdjacentHTML('beforeend', markup);\n//   });\n// }\n\n\n\n\n\n       //    FROM HOMEWORK 10\n\n//        import './css/styles.css';\n// import countryCardTpl from './templates/country-card.hbs';\n// import countryCardsTpl from './templates/list-country-cards.hbs';\n\n// import Notiflix from 'notiflix';\n// import {fetchCountries} from \"./js/fetchCountries\";\n// import debounce from \"lodash.debounce\";\n// const DEBOUNCE_DELAY = 300;\n\n// const inputRef = document.querySelector(\"input#search-box\");\n// const countryInfoRef = document.querySelector(\".country-info\"); \n// const countriesListRef = document.querySelector(\".country-list\");\n\n// inputRef.addEventListener(\"input\", debounce(renderList, DEBOUNCE_DELAY));\n\n// function renderList(event){\n//     const userRequest = event.target.value.trim();\n    \n//     if (userRequest === '') {\n//         countryInfoRef.innerHTML = \"\";\n//         countriesListRef.innerHTML =\"\";\n//         return;\n//     }\n \n//     fetchCountries(userRequest)\n//         .then(array => {\n//             if (array.length >10) {\n//                 countryInfoRef.innerHTML = \"\";\n//                 countriesListRef.innerHTML =\"\";\n//                 Notiflix.Notify.info(\"Too many matches found. Please enter a more specific name.\");\n//             } else if (array.length >= 2) {\n//                 countryInfoRef.innerHTML = \"\";                \n//                 const markup = countryCardsTpl(array);\n//                 countriesListRef.innerHTML = markup;\n//             } else {\n//                 countriesListRef.innerHTML =\"\";                \n//                 const markup = countryCardTpl(array);\n//                 countryInfoRef.innerHTML = markup;\n//             }\n//     })\n//         .catch(error => {\n//             countryInfoRef.innerHTML = \"\";\n//             countriesListRef.innerHTML =\"\";\n//             Notiflix.Notify.failure(\"Oops, there is no country with that name.\")\n//         });\n// }"]}